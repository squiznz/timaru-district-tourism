/***
*   Tools - Mixins
***/

// Generate a rem-based font-size with its pixel fallback, e.g.:
//
// .foo {
//     @include font-size(12px);
// }

@mixin font-size($font-size) {
    font-size: $font-size;
    font-size: ($font-size / $base-font-size) * 1rem;
}


// Z-depth mixin
@mixin z-depth($z-depth) {
    @if $z-depth == 1 {
        box-shadow: 0 1px 2px rgba(0, 0, 0, 0.15);
    } @elseif $z-depth == 2 {
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.25);
    } @elseif $z-depth == 3 {
        box-shadow: 0 3px 8px rgba(0, 0, 0, 0.35);
    } @elseif $z-depth == 4 {
        box-shadow: 0 4px 11px rgba(0, 0, 0, 0.45);
    } @elseif $z-depth == 5 {
        box-shadow: 0 5px 14px rgba(0, 0, 0, 0.55);
    }
}

// Headings
@mixin headings($from: 1, $to: 6){
    @for $i from $from through $to{
        h#{$i}{
        @content
        }
    }
}

// Hide content off-screen without resorting to `display:none;`.
//
// .visuallyhidden {
//     @include visuallyhidden();
// }
@mixin visuallyhidden {
    border: 0 !important;
    clip: rect(0 0 0 0) !important;
    height: 1px !important;
    margin: -1px !important;
    overflow: hidden !important;
    padding: 0 !important;
    position: absolute !important;
    width: 1px !important;
}


@mixin aspect-ratio($ratio-or-width, $height: null) {
  $padding: if($height, percentage($height/$ratio-or-width), percentage(1/$ratio-or-width));
  &:before { content:''; float: left; padding-bottom: $padding;  }
  &:after  { content:''; display: table; clear: both;  } 
}
